#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
#ifndef ODEROPAYSDK_SWIFT_H
#define ODEROPAYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import SafariServices;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OderoPaySdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)




@class NSString;
@class NSCoder;
@class NSDictionary;

/// Object that implements EVReflectable and NSCoding. Use this object as your base class
/// instead of NSObject and you wil automatically have support for all these protocols.
SWIFT_CLASS("_TtC11OderoPaySdk8EVObject")
@interface EVObject : NSObject <NSCoding>
/// Implementation of the setValue forUndefinedKey so that we can catch exceptions for when we use an optional Type like Int? in our object. Instead of using Int? you should use NSNumber?
/// This method is in EVObject and not in NSObject extension because you would get the error: method conflicts with previous declaration with the same Objective-C selector
/// \param value The value that you wanted to set
///
/// \param key The name of the property that you wanted to set
///
- (void)setValue:(id _Null_unspecified)value forUndefinedKey:(NSString * _Nonnull)key;
/// Implementation of the NSObject isEqual comparisson method
/// This method is in EVObject and not in NSObject extension because you would get the error: method conflicts with previous declaration with the same Objective-C selector
/// \param object The object where you want to compare with
///
///
/// returns:
/// Returns true if the object is the same otherwise false
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
/// Returns the pritty description of this object
///
/// returns:
/// The pritty description
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Returns the pritty description of this object
///
/// returns:
/// The pritty description
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
/// This basic init override is needed so we can use EVObject as a base class.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Decode any object
/// This method is in EVObject and not in NSObject because you would get the error: Initializer requirement ‘init(coder:)’ can
/// only be satisfied by a <code>required</code> initializer in the definition of non-final class ‘NSObject’
/// -parameter coder: The NSCoder that will be used for decoding the object.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder;
/// Encode this object using a NSCoder
/// \param aCoder The NSCoder that will be used for encoding the object
///
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
/// By default there is no aditional validation. Override this function to add your own class level validation rules
/// \param dict The dictionary with keys where the initialisation is called with
///
- (void)initValidation:(NSDictionary * _Nonnull)dict SWIFT_METHOD_FAMILY(none);
/// You can add general value decoding to an object when you implement this function. You can for instance use it to base64 decode, url decode, html decode, unicode, etc.
/// \param value The value that we will be decoded
///
/// \param key The key for the value
///
///
/// returns:
/// The decoded value
- (id _Nullable)decodePropertyValueWithValue:(id _Nonnull)value key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// You can add general value encoding to an object when you implement this function. You can for instance use it to base64 encode, url encode, html encode, unicode, etc.
/// \param value The value that we will be encoded
///
/// \param key The key for the value
///
///
/// returns:
/// The encoded value.
- (id _Nonnull)encodePropertyValueWithValue:(id _Nonnull)value key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// This is a general functon where you can filter for specific values (like nil or empty string) when creating a dictionary
/// \param value The value that we will test
///
/// \param key The key for the value
///
///
/// returns:
/// True if the value needs to be ignored.
- (BOOL)skipPropertyValue:(id _Nonnull)value key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Return a custom object for the object
///
/// returns:
/// The custom object (single value, dictionary or array)
- (id _Nullable)customConverter SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, Environment, open) {
  EnvironmentSANDBOX_TR = 0,
  EnvironmentSANDBOX_AZ = 1,
  EnvironmentPROD_TR = 2,
  EnvironmentPROD_AZ = 3,
};

@protocol OderoPayLibrary;

SWIFT_PROTOCOL("_TtP11OderoPaySdk7Factory_")
@protocol Factory
- (BOOL)initSDKWithEnvironment:(enum Environment)environment error:(NSError * _Nullable * _Nullable)error SWIFT_METHOD_FAMILY(none);
- (id <OderoPayLibrary> _Nullable)getOderoPayAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, Language, open) {
  LanguageTURKISH = 0,
  LanguageENGLISH = 1,
  LanguageRUSSIAN = 2,
  LanguageAZERBAIJANI = 3,
  LanguageBASE = 4,
};








SWIFT_PROTOCOL("_TtP11OderoPaySdk24OderoPayButtonCustomizer_")
@protocol OderoPayButtonCustomizer
/// This method is used to set the width and color of the button’s stroke
/// \param width is the width of the stroke
///
/// \param color is the color of the stroke
///
- (void)setStrokeWidthAndColorWithWidth:(float)width color:(NSInteger)color;
/// This method is used to set the width and height of the button
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     width is the width of the button
///   </li>
///   <li>
///     height is the height of the button
///   </li>
/// </ul>
- (void)setSizeWithWidth:(NSInteger)width height:(NSInteger)height;
/// This method is used to set the roundness of the button
/// \param radius is the radius of the button’s roundness 
///
- (void)setRoundnessWithRadius:(float)radius;
@end


SWIFT_CLASS("_TtC11OderoPaySdk18OderoPayButtonView")
@interface OderoPayButtonView : UIView <SFSafariViewControllerDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11OderoPaySdk15OderoPayFactory")
@interface OderoPayFactory : NSObject <Factory>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)initSDKWithEnvironment:(enum Environment)environment error:(NSError * _Nullable * _Nullable)error SWIFT_METHOD_FAMILY(none);
- (id <OderoPayLibrary> _Nullable)getOderoPayAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

@class UINavigationController;
@protocol OderoPayResultListener;

/// The Factory interface is the main SDK interface. It shall provide methods to create transactions.
SWIFT_PROTOCOL("_TtP11OderoPaySdk15OderoPayLibrary_")
@protocol OderoPayLibrary
/// This  method is used to initiate a payment by providing a token and a context.
/// \param navigationController will be using navigate other view controllers
///
/// \param token is a unique identifier for the payment
///
///
/// throws:
///
/// <ul>
///   <li>
///     InvalidInputException:  This exception shall be thrown in any of the following scenarios:
///   </li>
///   <li>
///     SDKAlreadyInitialized:  This exception shall be thrown if the 3DS SDK instance has already been initialized.
///   </li>
///   <li>
///     SDKRuntimeException:  This exception shall be thrown if an internal error is encountered by the Odero SDK.
///   </li>
///   <li>
///     SDKRuntimeException:  This exception shall be thrown if an internal error is encountered by the Odero SDK.
///   </li>
/// </ul>
- (BOOL)startPaymentWithNavigationController:(UINavigationController * _Nullable)navigationController token:(NSString * _Nullable)token delegate:(id <OderoPayResultListener> _Nullable)delegate error:(NSError * _Nullable * _Nullable)error;
/// This method returns a boolean value indicating if the OderoPayManager is initialized or not
///
/// returns:
/// a boolean value indicating the initialization status of the OderoPayManager
- (BOOL)isInitialized SWIFT_WARN_UNUSED_RESULT;
/// forceLanguage method is used to force the payment screens to use a specific language
/// \param language the target language to use in the payment screens
///
- (void)forceLanguageWithLanguage:(enum Language)language;
@end

@protocol OderoResult;

SWIFT_PROTOCOL("_TtP11OderoPaySdk22OderoPayResultListener_")
@protocol OderoPayResultListener
/// Called when the SDK has completed an action.
/// \param result the result of the action
///
- (void)onOderoPaySuccessWithResult:(id <OderoResult> _Nonnull)result;
/// Called when the SDK cancel the paymennt.
- (void)onOderoPayCancelled;
/// Called when the SDK encounters an error.
/// \param errorMsg the error message
///
/// \param errorId the error id
///
///
/// returns:
/// A ProtocolErrorEvent object.
- (void)onOderoPayFailureWithErrorId:(NSInteger)errorId errorMsg:(NSString * _Nullable)errorMsg;
@end


SWIFT_PROTOCOL("_TtP11OderoPaySdk11OderoResult_")
@protocol OderoResult
/// The getTransactionID method shall return the Transaction ID.
///
/// returns:
/// This method returns the Transaction ID as a string.
- (NSString * _Nonnull)getPaymentType SWIFT_WARN_UNUSED_RESULT;
/// The getErrorCode method shall return the error code.
///
/// returns:
/// This method returns the error code as a string.
- (NSArray<NSNumber *> * _Nullable)getPaymentIdList SWIFT_WARN_UNUSED_RESULT;
@end



/// The PKHUD object controls showing and hiding of the HUD, as well as its contents and touch response behavior.
SWIFT_CLASS("_TtC11OderoPaySdk5PKHUD")
@interface PKHUD : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11OderoPaySdk14PKHUDAnimating_")
@protocol PKHUDAnimating
- (void)startAnimation;
@optional
- (void)stopAnimation;
@end


/// PKHUDAssets provides a set of default images, that can be supplied to the PKHUD’s content views.
SWIFT_CLASS("_TtC11OderoPaySdk11PKHUDAssets")
@interface PKHUDAssets : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// PKHUDSquareBaseView provides a square view, which you can subclass and add additional views to.
SWIFT_CLASS("_TtC11OderoPaySdk19PKHUDSquareBaseView")
@interface PKHUDSquareBaseView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


/// PKHUDErrorView provides an animated error (cross) view.
SWIFT_CLASS("_TtC11OderoPaySdk14PKHUDErrorView")
@interface PKHUDErrorView : PKHUDSquareBaseView <PKHUDAnimating>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// PKHUDProgressView provides an indeterminate progress view.
SWIFT_CLASS("_TtC11OderoPaySdk17PKHUDProgressView")
@interface PKHUDProgressView : PKHUDSquareBaseView <PKHUDAnimating>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// PKHUDRotatingImageView provides a content view that rotates the supplied image automatically.
SWIFT_CLASS("_TtC11OderoPaySdk22PKHUDRotatingImageView")
@interface PKHUDRotatingImageView : PKHUDSquareBaseView <PKHUDAnimating>
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// PKHUDCheckmarkView provides an animated success (checkmark) view.
SWIFT_CLASS("_TtC11OderoPaySdk16PKHUDSuccessView")
@interface PKHUDSuccessView : PKHUDSquareBaseView <PKHUDAnimating>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// PKHUDSystemActivityIndicatorView provides the system UIActivityIndicatorView as an alternative.
SWIFT_CLASS("_TtC11OderoPaySdk32PKHUDSystemActivityIndicatorView")
@interface PKHUDSystemActivityIndicatorView : PKHUDSquareBaseView <PKHUDAnimating>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)startAnimation;
@end


/// PKHUDWideBaseView provides a wide base view, which you can subclass and add additional views to.
SWIFT_CLASS("_TtC11OderoPaySdk17PKHUDWideBaseView")
@interface PKHUDWideBaseView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// PKHUDTextView provides a wide, three line text view, which you can use to display information.
SWIFT_CLASS("_TtC11OderoPaySdk13PKHUDTextView")
@interface PKHUDTextView : PKHUDWideBaseView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



/// Class which implements the various <code>URLSessionDelegate</code> methods to connect various Alamofire features.
SWIFT_CLASS("_TtC11OderoPaySdk15SessionDelegate")
@interface SessionDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end

@class NSURLSessionDataTask;
@class NSData;
@class NSCachedURLResponse;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionDownloadTask;
@class NSURL;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end

@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSInputStream;
@class NSHTTPURLResponse;
@class NSURLRequest;
@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task SWIFT_AVAILABILITY(watchos,introduced=4.0) SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0) SWIFT_AVAILABILITY(macos,introduced=10.13);
@end



@interface UITextField (SWIFT_EXTENSION(OderoPaySdk))
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
@end







#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.1 (swiftlang-5.7.1.135.3 clang-1400.0.29.51)
#ifndef ODEROPAYSDK_SWIFT_H
#define ODEROPAYSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import SafariServices;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="OderoPaySdk",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)




@class NSString;
@class NSCoder;
@class NSDictionary;

/// Object that implements EVReflectable and NSCoding. Use this object as your base class
/// instead of NSObject and you wil automatically have support for all these protocols.
SWIFT_CLASS("_TtC11OderoPaySdk8EVObject")
@interface EVObject : NSObject <NSCoding>
/// Implementation of the setValue forUndefinedKey so that we can catch exceptions for when we use an optional Type like Int? in our object. Instead of using Int? you should use NSNumber?
/// This method is in EVObject and not in NSObject extension because you would get the error: method conflicts with previous declaration with the same Objective-C selector
/// \param value The value that you wanted to set
///
/// \param key The name of the property that you wanted to set
///
- (void)setValue:(id _Null_unspecified)value forUndefinedKey:(NSString * _Nonnull)key;
/// Implementation of the NSObject isEqual comparisson method
/// This method is in EVObject and not in NSObject extension because you would get the error: method conflicts with previous declaration with the same Objective-C selector
/// \param object The object where you want to compare with
///
///
/// returns:
/// Returns true if the object is the same otherwise false
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
/// Returns the pritty description of this object
///
/// returns:
/// The pritty description
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Returns the pritty description of this object
///
/// returns:
/// The pritty description
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
/// This basic init override is needed so we can use EVObject as a base class.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Decode any object
/// This method is in EVObject and not in NSObject because you would get the error: Initializer requirement ‘init(coder:)’ can
/// only be satisfied by a <code>required</code> initializer in the definition of non-final class ‘NSObject’
/// -parameter coder: The NSCoder that will be used for decoding the object.
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder;
/// Encode this object using a NSCoder
/// \param aCoder The NSCoder that will be used for encoding the object
///
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
/// By default there is no aditional validation. Override this function to add your own class level validation rules
/// \param dict The dictionary with keys where the initialisation is called with
///
- (void)initValidation:(NSDictionary * _Nonnull)dict SWIFT_METHOD_FAMILY(none);
/// You can add general value decoding to an object when you implement this function. You can for instance use it to base64 decode, url decode, html decode, unicode, etc.
/// \param value The value that we will be decoded
///
/// \param key The key for the value
///
///
/// returns:
/// The decoded value
- (id _Nullable)decodePropertyValueWithValue:(id _Nonnull)value key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// You can add general value encoding to an object when you implement this function. You can for instance use it to base64 encode, url encode, html encode, unicode, etc.
/// \param value The value that we will be encoded
///
/// \param key The key for the value
///
///
/// returns:
/// The encoded value.
- (id _Nonnull)encodePropertyValueWithValue:(id _Nonnull)value key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// This is a general functon where you can filter for specific values (like nil or empty string) when creating a dictionary
/// \param value The value that we will test
///
/// \param key The key for the value
///
///
/// returns:
/// True if the value needs to be ignored.
- (BOOL)skipPropertyValue:(id _Nonnull)value key:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Return a custom object for the object
///
/// returns:
/// The custom object (single value, dictionary or array)
- (id _Nullable)customConverter SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, Environment, open) {
  EnvironmentSANDBOX_TR = 0,
  EnvironmentSANDBOX_AZ = 1,
  EnvironmentPROD_TR = 2,
  EnvironmentPROD_AZ = 3,
};

@protocol OderoPayLibrary;

SWIFT_PROTOCOL("_TtP11OderoPaySdk7Factory_")
@protocol Factory
- (BOOL)initSDKWithEnvironment:(enum Environment)environment error:(NSError * _Nullable * _Nullable)error SWIFT_METHOD_FAMILY(none);
- (id <OderoPayLibrary> _Nullable)getOderoPayAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


typedef SWIFT_ENUM(NSInteger, Language, open) {
  LanguageTURKISH = 0,
  LanguageENGLISH = 1,
  LanguageRUSSIAN = 2,
  LanguageAZERBAIJANI = 3,
  LanguageBASE = 4,
};








SWIFT_PROTOCOL("_TtP11OderoPaySdk24OderoPayButtonCustomizer_")
@protocol OderoPayButtonCustomizer
/// This method is used to set the width and color of the button’s stroke
/// \param width is the width of the stroke
///
/// \param color is the color of the stroke
///
- (void)setStrokeWidthAndColorWithWidth:(float)width color:(NSInteger)color;
/// This method is used to set the width and height of the button
/// <ul>
///   <li>
///     Parameters:
///   </li>
///   <li>
///     width is the width of the button
///   </li>
///   <li>
///     height is the height of the button
///   </li>
/// </ul>
- (void)setSizeWithWidth:(NSInteger)width height:(NSInteger)height;
/// This method is used to set the roundness of the button
/// \param radius is the radius of the button’s roundness 
///
- (void)setRoundnessWithRadius:(float)radius;
@end


SWIFT_CLASS("_TtC11OderoPaySdk18OderoPayButtonView")
@interface OderoPayButtonView : UIView <SFSafariViewControllerDelegate>
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC11OderoPaySdk15OderoPayFactory")
@interface OderoPayFactory : NSObject <Factory>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)initSDKWithEnvironment:(enum Environment)environment error:(NSError * _Nullable * _Nullable)error SWIFT_METHOD_FAMILY(none);
- (id <OderoPayLibrary> _Nullable)getOderoPayAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

@class UINavigationController;
@protocol OderoPayResultListener;

/// The Factory interface is the main SDK interface. It shall provide methods to create transactions.
SWIFT_PROTOCOL("_TtP11OderoPaySdk15OderoPayLibrary_")
@protocol OderoPayLibrary
/// This  method is used to initiate a payment by providing a token and a context.
/// \param navigationController will be using navigate other view controllers
///
/// \param token is a unique identifier for the payment
///
///
/// throws:
///
/// <ul>
///   <li>
///     InvalidInputException:  This exception shall be thrown in any of the following scenarios:
///   </li>
///   <li>
///     SDKAlreadyInitialized:  This exception shall be thrown if the 3DS SDK instance has already been initialized.
///   </li>
///   <li>
///     SDKRuntimeException:  This exception shall be thrown if an internal error is encountered by the Odero SDK.
///   </li>
///   <li>
///     SDKRuntimeException:  This exception shall be thrown if an internal error is encountered by the Odero SDK.
///   </li>
/// </ul>
- (BOOL)startPaymentWithNavigationController:(UINavigationController * _Nullable)navigationController token:(NSString * _Nullable)token delegate:(id <OderoPayResultListener> _Nullable)delegate error:(NSError * _Nullable * _Nullable)error;
/// This method returns a boolean value indicating if the OderoPayManager is initialized or not
///
/// returns:
/// a boolean value indicating the initialization status of the OderoPayManager
- (BOOL)isInitialized SWIFT_WARN_UNUSED_RESULT;
/// forceLanguage method is used to force the payment screens to use a specific language
/// \param language the target language to use in the payment screens
///
- (void)forceLanguageWithLanguage:(enum Language)language;
@end

@protocol OderoResult;

SWIFT_PROTOCOL("_TtP11OderoPaySdk22OderoPayResultListener_")
@protocol OderoPayResultListener
/// Called when the SDK has completed an action.
/// \param result the result of the action
///
- (void)onOderoPaySuccessWithResult:(id <OderoResult> _Nonnull)result;
/// Called when the SDK cancel the paymennt.
- (void)onOderoPayCancelled;
/// Called when the SDK encounters an error.
/// \param errorMsg the error message
///
/// \param errorId the error id
///
///
/// returns:
/// A ProtocolErrorEvent object.
- (void)onOderoPayFailureWithErrorId:(NSInteger)errorId errorMsg:(NSString * _Nullable)errorMsg;
@end


SWIFT_PROTOCOL("_TtP11OderoPaySdk11OderoResult_")
@protocol OderoResult
/// The getTransactionID method shall return the Transaction ID.
///
/// returns:
/// This method returns the Transaction ID as a string.
- (NSString * _Nonnull)getPaymentType SWIFT_WARN_UNUSED_RESULT;
/// The getErrorCode method shall return the error code.
///
/// returns:
/// This method returns the error code as a string.
- (NSArray<NSNumber *> * _Nullable)getPaymentIdList SWIFT_WARN_UNUSED_RESULT;
@end



/// The PKHUD object controls showing and hiding of the HUD, as well as its contents and touch response behavior.
SWIFT_CLASS("_TtC11OderoPaySdk5PKHUD")
@interface PKHUD : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP11OderoPaySdk14PKHUDAnimating_")
@protocol PKHUDAnimating
- (void)startAnimation;
@optional
- (void)stopAnimation;
@end


/// PKHUDAssets provides a set of default images, that can be supplied to the PKHUD’s content views.
SWIFT_CLASS("_TtC11OderoPaySdk11PKHUDAssets")
@interface PKHUDAssets : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// PKHUDSquareBaseView provides a square view, which you can subclass and add additional views to.
SWIFT_CLASS("_TtC11OderoPaySdk19PKHUDSquareBaseView")
@interface PKHUDSquareBaseView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end


/// PKHUDErrorView provides an animated error (cross) view.
SWIFT_CLASS("_TtC11OderoPaySdk14PKHUDErrorView")
@interface PKHUDErrorView : PKHUDSquareBaseView <PKHUDAnimating>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// PKHUDProgressView provides an indeterminate progress view.
SWIFT_CLASS("_TtC11OderoPaySdk17PKHUDProgressView")
@interface PKHUDProgressView : PKHUDSquareBaseView <PKHUDAnimating>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// PKHUDRotatingImageView provides a content view that rotates the supplied image automatically.
SWIFT_CLASS("_TtC11OderoPaySdk22PKHUDRotatingImageView")
@interface PKHUDRotatingImageView : PKHUDSquareBaseView <PKHUDAnimating>
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end



/// PKHUDCheckmarkView provides an animated success (checkmark) view.
SWIFT_CLASS("_TtC11OderoPaySdk16PKHUDSuccessView")
@interface PKHUDSuccessView : PKHUDSquareBaseView <PKHUDAnimating>
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)startAnimation;
- (void)stopAnimation;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// PKHUDSystemActivityIndicatorView provides the system UIActivityIndicatorView as an alternative.
SWIFT_CLASS("_TtC11OderoPaySdk32PKHUDSystemActivityIndicatorView")
@interface PKHUDSystemActivityIndicatorView : PKHUDSquareBaseView <PKHUDAnimating>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)startAnimation;
@end


/// PKHUDWideBaseView provides a wide base view, which you can subclass and add additional views to.
SWIFT_CLASS("_TtC11OderoPaySdk17PKHUDWideBaseView")
@interface PKHUDWideBaseView : UIView
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


/// PKHUDTextView provides a wide, three line text view, which you can use to display information.
SWIFT_CLASS("_TtC11OderoPaySdk13PKHUDTextView")
@interface PKHUDTextView : PKHUDWideBaseView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



/// Class which implements the various <code>URLSessionDelegate</code> methods to connect various Alamofire features.
SWIFT_CLASS("_TtC11OderoPaySdk15SessionDelegate")
@interface SessionDelegate : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLSession;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session didBecomeInvalidWithError:(NSError * _Nullable)error;
@end

@class NSURLSessionDataTask;
@class NSData;
@class NSCachedURLResponse;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionDataDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask didReceiveData:(NSData * _Nonnull)data;
- (void)URLSession:(NSURLSession * _Nonnull)session dataTask:(NSURLSessionDataTask * _Nonnull)dataTask willCacheResponse:(NSCachedURLResponse * _Nonnull)proposedResponse completionHandler:(void (^ _Nonnull)(NSCachedURLResponse * _Nullable))completionHandler;
@end

@class NSURLSessionDownloadTask;
@class NSURL;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionDownloadDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didResumeAtOffset:(int64_t)fileOffset expectedTotalBytes:(int64_t)expectedTotalBytes;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didWriteData:(int64_t)bytesWritten totalBytesWritten:(int64_t)totalBytesWritten totalBytesExpectedToWrite:(int64_t)totalBytesExpectedToWrite;
- (void)URLSession:(NSURLSession * _Nonnull)session downloadTask:(NSURLSessionDownloadTask * _Nonnull)downloadTask didFinishDownloadingToURL:(NSURL * _Nonnull)location;
@end

@class NSURLSessionTask;
@class NSURLAuthenticationChallenge;
@class NSURLCredential;
@class NSInputStream;
@class NSHTTPURLResponse;
@class NSURLRequest;
@class NSURLSessionTaskMetrics;

@interface SessionDelegate (SWIFT_EXTENSION(OderoPaySdk)) <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didReceiveChallenge:(NSURLAuthenticationChallenge * _Nonnull)challenge completionHandler:(void (^ _Nonnull)(NSURLSessionAuthChallengeDisposition, NSURLCredential * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didSendBodyData:(int64_t)bytesSent totalBytesSent:(int64_t)totalBytesSent totalBytesExpectedToSend:(int64_t)totalBytesExpectedToSend;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task needNewBodyStream:(void (^ _Nonnull)(NSInputStream * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task willPerformHTTPRedirection:(NSHTTPURLResponse * _Nonnull)response newRequest:(NSURLRequest * _Nonnull)request completionHandler:(void (^ _Nonnull)(NSURLRequest * _Nullable))completionHandler;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didFinishCollectingMetrics:(NSURLSessionTaskMetrics * _Nonnull)metrics;
- (void)URLSession:(NSURLSession * _Nonnull)session task:(NSURLSessionTask * _Nonnull)task didCompleteWithError:(NSError * _Nullable)error;
- (void)URLSession:(NSURLSession * _Nonnull)session taskIsWaitingForConnectivity:(NSURLSessionTask * _Nonnull)task SWIFT_AVAILABILITY(watchos,introduced=4.0) SWIFT_AVAILABILITY(tvos,introduced=11.0) SWIFT_AVAILABILITY(ios,introduced=11.0) SWIFT_AVAILABILITY(macos,introduced=10.13);
@end



@interface UITextField (SWIFT_EXTENSION(OderoPaySdk))
- (BOOL)canPerformAction:(SEL _Nonnull)action withSender:(id _Nullable)sender SWIFT_WARN_UNUSED_RESULT;
@end







#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
